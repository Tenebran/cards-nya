{"version":3,"sources":["modules/routes/Routes.tsx","modules/pages/Auth/Login/Login.tsx","modules/pages/Auth/LostPassword/LostPassword.tsx","modules/pages/Auth/NewPassword/NewPassword.tsx","modules/pages/Auth/Registration/Registration.tsx","modules/pages/PageNotFound/PageNotFound.tsx","modules/pages/Profile/Profile.tsx","modules/components/SuperButton/SuperButton.tsx","modules/components/SuperCheckbox/SuperCheckbox.tsx","modules/components/SuperInput/SuperInput.tsx","modules/components/SuperEditableSpan/SuperEditableSpan.tsx","modules/components/SuperRadio/SuperRadio.tsx","modules/components/SuperSelect/SuperSelect.tsx","modules/pages/TestPage/TestPage.tsx","modules/components/Header/Header.tsx","App.tsx","reportWebVitals.ts","modules/redux/profile/profileReducer.ts","modules/redux/store.ts","index.tsx"],"names":["PATH","Login","LostPassword","NewPassword","Registration","PageNotFound","Profile","SuperButton","red","className","restProps","finalClassName","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","e","currentTarget","checked","SuperInput","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","SuperSelect","list","index","TestPage","arr","setValue","setChecked","radioValue","onClick","alert","undefined","Routes","exact","path","render","to","TEST","component","PROFILE","LOGIN","REGISTRATION","RESET_PASSWORD","NEW_PASS","Header","activeClassName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","profile","state","action","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a002d0ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Login } from '../pages/Auth/Login/Login';\r\nimport { LostPassword } from '../pages/Auth/LostPassword/LostPassword';\r\nimport { NewPassword } from '../pages/Auth/NewPassword/NewPassword';\r\nimport { Registration } from '../pages/Auth/Registration/Registration';\r\nimport { PageNotFound } from '../pages/PageNotFound/PageNotFound';\r\nimport { Profile } from '../pages/Profile/Profile';\r\nimport { TestPage } from '../pages/TestPage/TestPage';\r\n\r\nexport enum PATH {\r\n  TEST = '/test',\r\n  PROFILE = '/profile',\r\n  LOGIN = '/login',\r\n  REGISTRATION = '/registration',\r\n  RESET_PASSWORD = '/resetpass',\r\n  NEW_PASS = '/newpass',\r\n}\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={'/'} render={() => <Redirect to={PATH.TEST} />} />\r\n      <Route path={PATH.TEST} component={TestPage} />\r\n      <Route path={PATH.PROFILE} component={Profile} />\r\n      <Route path={PATH.LOGIN} component={Login} />\r\n      <Route path={PATH.REGISTRATION} component={Registration} />\r\n      <Route path={PATH.RESET_PASSWORD} component={LostPassword} />\r\n      <Route path={PATH.NEW_PASS} component={NewPassword} />\r\n      <Route component={PageNotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Login.scss';\r\n\r\nexport const Login = () => {\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './LostPassword.scss';\r\n\r\nexport const LostPassword = () => {\r\n  return <div></div>;\r\n};\r\n","import React from 'react';\r\nimport './NewPassword.scss';\r\n\r\nexport const NewPassword = () => {\r\n  return (\r\n    <div>\r\n      <h1>New Password</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Registration = () => {\r\n  return (\r\n    <div>\r\n      <h1>Registration</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const PageNotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>PageNotFound</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Profile.scss';\r\n\r\nexport const Profile = () => {\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\nimport './SuperButton.scss';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean;\n  error?: string;\n};\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\n  red,\n  className,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  const finalClassName = `${red ? 'superButton__red' : 'superButton__default'} ${className}`;\n\n  return (\n    <button\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n};\n\nexport default SuperButton;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react';\n// import s from \"./SuperCheckbox.module.css\";\n\nimport './SuperCheckBox.scss';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n    onChange && onChange(e);\n  };\n\n  const finalInputClassName = `${'checkbox'} ${className ? className : ''}`;\n\n  return (\n    <label className={'container'}>\n      <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      <span className={'checkmark'}>&nbsp;</span>\n      {children && <span className={'spanClassName'}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n\nexport default SuperCheckbox;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react';\nimport './SuperInput.scss';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nconst SuperInput: React.FC<SuperInputTextPropsType> = ({\n  type = 'text',\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && // если есть пропс onChange\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    e.key === 'Enter' && // если нажата кнопка Enter\n      onEnter && // и есть пропс onEnter\n      onEnter(); // то вызвать его\n  };\n\n  const finalSpanClassName = `${'superInput__error'} ${spanClassName ? spanClassName : ''}`;\n  const finalInputClassName = `${'superInput'} ${className ? className : ''} ${\n    error ? 'superInput__errorInput' : ''\n  }`; // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={type}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  );\n};\n\nexport default SuperInput;\n","import React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState } from 'react';\nimport SuperInput from '../SuperInput/SuperInput';\nimport './SuperEditableSpan.scss';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n\n  spanProps?: DefaultSpanPropsType; // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\n  autoFocus, // игнорировать изменение этого пропса\n  onBlur,\n  onEnter,\n  spanProps,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {};\n\n  const onEnterCallback = () => {\n    setEditMode(false); // выключить editMode при нажатии Enter\n    onEnter && onEnter();\n  };\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n    setEditMode(false); // выключить editMode при нажатии за пределами инпута\n    onBlur && onBlur(e);\n  };\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    setEditMode(true); // включить editMode при двойном клике\n    onDoubleClick && onDoubleClick(e);\n  };\n\n  const spanClassName = `${!editMode ? 'isEditable' : ''} ${className}`;\n\n  return (\n    <>\n      {editMode ? (\n        <SuperInput\n          autoFocus // пропсу с булевым значением не обязательно указывать true\n          onBlur={onBlurCallback}\n          onEnter={onEnterCallback}\n          {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n        />\n      ) : (\n        <span onDoubleClick={onDoubleClickCallBack} className={spanClassName} {...restSpanProps}>\n          {/*если нет захардкодженного текста для спана, то значение инпута*/}\n          {children || restProps.value}\n        </span>\n      )}\n    </>\n  );\n};\n\nexport default SuperEditableSpan;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                name={name}\n                value={o}\n                onChange={onChangeCallback}\n                checked={value === o}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react';\r\nimport './SuperSelect.scss';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<\r\n  SelectHTMLAttributes<HTMLSelectElement>,\r\n  HTMLSelectElement\r\n>;\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options: Array<string> | Array<null>;\r\n  onChangeOption: (option: string) => void;\r\n};\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = ({\r\n  options,\r\n  onChange,\r\n  onChangeOption,\r\n  ...restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e);\r\n    onChangeOption && onChangeOption(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <select onChange={onChangeCallback} {...restProps} className=\"select\">\r\n      {options\r\n        ? options.map((list, index) => {\r\n            if (list)\r\n              return (\r\n                <option key={`${index}`} value={list} className=\"select__option\">\r\n                  {list}\r\n                </option>\r\n              );\r\n            return '';\r\n          })\r\n        : ''}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SuperSelect;\r\n","import React, { useState } from 'react';\r\nimport SuperButton from '../../components/SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../components/SuperCheckbox/SuperCheckbox';\r\nimport SuperEditableSpan from '../../components/SuperEditableSpan/SuperEditableSpan';\r\nimport SuperRadio from '../../components/SuperRadio/SuperRadio';\r\nimport SuperSelect from '../../components/SuperSelect/SuperSelect';\r\nimport './TestPage.scss';\r\n\r\nexport const TestPage = () => {\r\n  const arr = ['x', 'y', 'z'];\r\n  const [value, setValue] = useState<string>('');\r\n  const [checked, setChecked] = useState<boolean>(false);\r\n  const [radioValue, onChangeOption] = useState(arr[1]);\r\n  const alertHandle = () =>\r\n    alert(\r\n      `Input value is: ${value}\\nCheckbox checked: ${checked}\\nSelected radio/option: ${radioValue}`\r\n    );\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <div className=\"test__components\">\r\n        <div className=\"test__components__title\">Button:</div>\r\n        <SuperButton onClick={alertHandle}> SuperButton</SuperButton>\r\n      </div>\r\n\r\n      <div className=\"test__components\">\r\n        <div className=\"test__components__title\">CheckBox</div>\r\n        <SuperCheckbox checked={checked} onChangeChecked={setChecked} />\r\n      </div>\r\n\r\n      <div className=\"test__components\">\r\n        <div className=\"test__components__title\">EdiTableSpan</div>\r\n        <SuperEditableSpan\r\n          value={value}\r\n          onChangeText={setValue}\r\n          spanProps={{ children: value ? undefined : 'Enter text...' }}\r\n        />\r\n      </div>\r\n      <div className=\"test__components\">\r\n        <div className=\"test__components__title\">SuperSelect</div>\r\n\r\n        <SuperSelect options={arr} value={radioValue} onChangeOption={onChangeOption} />\r\n      </div>\r\n\r\n      <div className=\"test__components\">\r\n        <div className=\"test__components__title\">SuperRadio</div>\r\n        <div>\r\n          <SuperRadio\r\n            name={'radio'}\r\n            options={arr}\r\n            value={radioValue}\r\n            onChangeOption={onChangeOption}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { PATH } from '../../routes/Routes';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header = () => {\n  return (\n    <header className={'header'}>\n      <NavLink\n        to={PATH.TEST}\n        activeClassName={'header__button_active'}\n        className={'header__button'}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to={PATH.PROFILE}\n        activeClassName={'header__button_active'}\n        className={'header__button'}\n      >\n        Profile\n      </NavLink>\n\n      <NavLink\n        to={PATH.LOGIN}\n        activeClassName={'header__button_active'}\n        className={'header__button'}\n      >\n        Login\n      </NavLink>\n\n      <NavLink\n        to={PATH.REGISTRATION}\n        activeClassName={'header__button_active'}\n        className={'header__button'}\n      >\n        Sing Up\n      </NavLink>\n    </header>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { HashRouter } from 'react-router-dom';\nimport { Routes } from './modules/routes/Routes';\nimport { Header } from './modules/components/Header/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header />\n        <Routes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {};\r\n\r\nexport const profileReducer = (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { profileReducer } from './profile/profileReducer';\r\n\r\nconst reducers = combineReducers({\r\n  profile: profileReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>;\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './modules/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}